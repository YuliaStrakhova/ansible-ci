- name: Create an ubuntu instance on Amazon EC2
  hosts: localhost
  vars:
    prefix: ansible-learning
    region: us-east-1
    my_home_ip: "5.18.163.44"

    #manual created

    vpc_id: "vpc-078dbaebee037409b"
    subnet_id_1: "subnet-069f0b93d07f59d85"
    subnet_id_2: "subnet-0f348b2f7349b25f3"

  tasks:
    - name: ssh security group
      ec2_group:
        name: "{{ prefix }}-group"
        description: allow ssh access
        region: "{{ region }}"
        vpc_id: "{{ vpc_id }}"
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 9092
            to_port: 9092
            cidr_ip: "{{ my_home_ip }}/32"
          - proto: tcp
            from_port: 2181
            to_port: 2181
            cidr_ip: "{{ my_home_ip }}/32"
      register: ec2_group
    - debug: var=ec2_group

    - name: start the instance
      ec2:
        image: ami-00068cd7555f543d5
        region: "{{ region }}"
        instance_type: t2.small
        exact_count: 1
        count_tag:
          Name: ansiblebook
        key_name: for-github
        group: ["{{ prefix }}-group"]
        assign_public_ip: yes
        instance_tags: { Name: ansiblebook, type: one, env: test }
        vpc_subnet_id: "{{ subnet_id_1 }}"
        wait: true
      register: ec2


    - name: Add new instance to host group
      add_host:
          hostname: "{{ item.public_dns_name }}"
          groupname: ec2_launched
          internal_ip: "{{ item.private_ip }}"
      loop: "{{ ec2.tagged_instances }}"

    - name: wait for ssh server to be running
      wait_for: host={{ item.public_dns_name }} port=22 search_regex=OpenSSH
      with_items: "{{ ec2.tagged_instances }}"

- name: install kafka
  hosts: ec2_launched
  gather_facts: False
  tasks:
    - debug: var=item
    - name: "Install java"
      yum:
        name: java-1.8.0-openjdk-devel
        state: present
      become: yes
    - shell: "pwd"
    - name: Download file from a file path
      get_url:
        url: http://mirror.linux-ia64.org/apache/kafka/2.4.0/kafka_2.12-2.4.0.tgz
        dest: .
        timeout: 30
    - name: unarchive
      unarchive:
        remote_src: yes
        src: kafka_2.12-2.4.0.tgz
        dest: .
    - name: inset PATH
      lineinfile:
        path: ~/.bashrc
        line: export PATH=/home/ec2-user/kafka_2.12-2.4.0/bin:$PATH
    - name: add data dir
      file:
          path: ~/kafka_2.12-2.4.0/data/zookeeper
          state: directory
    - name: add zookeeper data comfig properties
      lineinfile:
        path: ~/kafka_2.12-2.4.0/config/zookeeper.properties
        line: "dataDir=/home/ec2-user/kafka_2.12-2.4.0/data/zookeeper"
        regexp: '^dataDir=.*$'
    - name: start zookeeper
      shell: "zookeeper-server-start.sh -daemon /home/ec2-user/kafka_2.12-2.4.0/config/zookeeper.properties"
    - name: add kafka data dir
      file:
          path: ~/kafka_2.12-2.4.0/data/kafka
          state: directory
    - name: add kafka data comfig properties
      lineinfile:
          path: ~/kafka_2.12-2.4.0/config/server.properties
          line: "log.dirs=/home/ec2-user/kafka_2.12-2.4.0/data/kafka"
          regexp: '^log.dirs=.*$'
    - name: add kafka data comfig properties
      lineinfile:
          path: ~/kafka_2.12-2.4.0/config/server.properties
          line: "advertised.listeners=PLAINTEXT://{{ ansible_hostname }}:9092"
          regexp: '^#?advertised.listeners=.*$'

    - name: add kafka data comfig properties
      lineinfile:
          path: ~/kafka_2.12-2.4.0/config/server.properties
          line: "listeners=PLAINTEXT://{{ internal_ip }}:9092"
          regexp: '^#?listeners=.*$'

    - name: start kafka
      shell: "kafka-server-start.sh -daemon /home/ec2-user/kafka_2.12-2.4.0/config/server.properties"